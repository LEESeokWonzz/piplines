
pipeline {
    agent any
    environment {
        REPO_URL = "${params.APP_REPO}"
        BRANCH = "${params.TARGET_BRANCH}"
        MAVEN_IMAGE = 'maven:3.8.5-eclipse-temurin-17'
        MAVEN_OPTS = '-Dmaven.repo.local=.m2/repository'
        SSH_HOST = "${params.SERVER}"
        SSH_TARGET_DIR = "${params.REMOTE_DIRECTORY}"
    }
    tools {
        maven 'maven'       
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: "${BRANCH}", url: "${REPO_URL}"
            }
        }

        stage('Check Env') {
        steps {
            sh '''
                echo "JAVA_HOME=$JAVA_HOME"
                which java
                java -version
                echo "PATH=$PATH"
            '''
        }
    }

        stage('Build') {
            steps {
                sh '''
                    mvn clean package
                    ls -ltr target/*.jar
                '''
            }
        }
        
        stage('Deploy') {
            steps {
                sshPublisher(publishers: [
                    sshPublisherDesc(
                        configName: "${SSH_HOST}", // Jenkins에 등록한 서버 이름
                        transfers: [
                            sshTransfer(
                                sourceFiles: 'target/*.jar',      // 빌드된 jar 파일 경로
                                remoteDirectory: "${SSH_TARGET_DIR}",  // 원격 서버 경로
                                removePrefix: 'target',            // target 폴더 이름 제거해서 복사
                                cleanRemote: false,
                                 execCommand: 'sh deploy.sh'

                            )
                        ],
                        verbose: true
                    )
                ])
            }
        }

    }
}