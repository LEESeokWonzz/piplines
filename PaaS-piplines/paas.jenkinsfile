pipeline {
    agent any

    environment {
        REPO_URL = "${params.APP_REPO}"
        BRANCH = "${params.TARGET_BRANCH}"
        IMAGE_NAME = 'yesman0914/01'
        IMAGE_TAG = 'latest'
        REGISTRY_CREDENTIALS_ID = 'docker-id'
    }

    tools {
        maven 'maven'
        // docker 'docker'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: "${BRANCH}", url: "${REPO_URL}"
            }
        }

        stage('Build JAR') {
            steps {
                sh 'mvn clean package'
            }
        }

        stage('Build Docker Image') {
            steps { 
                app = docker.build("yesman0914/01")
                // sh 'docker build -t $IMAGE_NAME:$IMAGE_TAG .'
            }
        }

        stage('Push to Registry') {
            steps {
                withCredentials([usernamePassword(credentialsId: env.REGISTRY_CREDENTIALS_ID, usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    app.push("${env.BUILD_NUMBER}")
                    app.push("latest")
                }
            }
        }

        // stage('Deploy to Remote (Optional)') {
        //     steps {
        //         sshPublisher(
        //             publishers: [
        //                 sshPublisherDesc(
        //                     configName: 'app-server',
        //                     transfers: [],
        //                     execCommand: '''
        //                         docker pull $IMAGE_NAME:$IMAGE_TAG
        //                         docker stop project-resume || true
        //                         docker rm project-resume || true
        //                         docker run -d --name project-resume -p 8080:8080 $IMAGE_NAME:$IMAGE_TAG
        //                     '''
        //                 )
        //             ]
        //         )
        //     }
        // }
    }
}